/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var table = ee.FeatureCollection("users/zsy11600/Jiangxi/Boundary/JxLine"),
    CCI_points = ee.FeatureCollection("projects/my-image-assets/assets/China/Cci_points"),
    table2 = ee.FeatureCollection("projects/my-image-assets/assets/China/Grids_China"),
    testPoly1 = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[90.01935870885207, 34.358245432965994],
          [90.01935870885207, 27.387695625002273],
          [97.73176105260207, 27.387695625002273],
          [97.73176105260207, 34.358245432965994]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

print(table2);
var roi  = testPoly1; //table2.first().geometry();
Map.addLayer(roi,{},'roi');


var Sample =  require('users/zsy11600/public_repository:China/VCT/Sample_Points');
var MeanBand = require('users/zsy11600/public_repository:China/VCT/SampleMean_v1');
var GetIfz = require('users/zsy11600/public_repository:China/VCT/GetIfz')
var GetThreshold = require('users/zsy11600/public_repository:China/VCT/Points_thre')

//print(Sample,MeanBand)

var Points = Sample.Sample(roi);

var BandMeanList = MeanBand.SampleMean(Points,roi);


//print(Points)
//print(BandMeanList)

var B3_mean = BandMeanList.get(0);
var B5_mean = BandMeanList.get(1);
var B7_mean = BandMeanList.get(2);
var B3_std = BandMeanList.get(3);
var B5_std = BandMeanList.get(4);
var B7_std= BandMeanList.get(5);


//var ifzCol = GetIfz.GetIfzCol(roi,B3_mean,B5_mean,B7_mean,B3_std,B5_std,B7_std)
//print('ifzCol',ifzCol)

Map.addLayer(roi,{},'roi');













/*

//-------------------------------------------------------------------------------- 
var ls = ifzCol;
print('ls',ls)

//---------------------------------------------------------------------------------

var JxPoints = CCI_points.filterBounds(roi).limit(50);
print('JxPoints',JxPoints)
print('JXpoints_size',JxPoints.size())

var firstPoint = JxPoints.first()
print('firstPoint',firstPoint)

var dateYear = firstPoint.get('year')
print('dateYear',dateYear)

var startDate = ee.Date.fromYMD(dateYear,1,1);
var endDate = ee.Date.fromYMD(dateYear,12,31);

var image1 = ls.filterDate(startDate,endDate).mean()


var OneValue = image1.reduceRegion({
    reducer:ee.Reducer.mean(),
    geometry:firstPoint.geometry(), 
    crs: 'EPSG:4326',
    scale:30,
    maxPixels:1e13
  });

print('OneValue',OneValue)






function addPro(fea){
  var dateYear = fea.get('year')
  
  var startDate = ee.Date.fromYMD(dateYear,1,1);
  var endDate = ee.Date.fromYMD(dateYear,12,31);
  
  var image = ls.select('ifz').filterDate(startDate,endDate).mosaic()
  var OneValue = image.reduceRegion({
    reducer:ee.Reducer.mean(),
    geometry:fea.geometry(), 
    crs: 'EPSG:4326',
    scale:30,
    maxPixels:1e13
  });

  var PointAddPro = fea.set('value_cal',OneValue.get('ifz'))
  
  return PointAddPro;
}



/*var GetValue = function(feature){
  var feacol = ee.FeatureCollection(feature);
  var Fea_num = ee.Number(feacol.size());
var feacol = JxPoints;

//var JxValue = JxPoints.map(GetValue)

//print('JxValue',JxValue);
  



var GetValue = function(num){

    var Fea_num = num;
    if (Fea_num >= 100){
      
        var Point_AddPro = feacol.limit(50).map(addPro)
       // var value_histogram = Point_AddPro.aggregate_histogram('value_cal')
        var value_sort = Point_AddPro.sort('value_cal',false).limit(6)
        var value_sort_95 = value_sort.toList(6).slice(5,6,1)
        var value_one = ee.Feature(value_sort_95.get(0)).get('value_cal')
        var result = ee.Feature(value_one);
    }
    else if(0 < Fea_num < 100){
        var Point_AddPro1 = feacol.limit(Fea_num).map(addPro);
        var value_sort1 = Point_AddPro1.sort('value_cal',false).limit(Fea_num)
        
        var Number_start = ee.Number(Fea_num).multiply(ee.Number(0.05)).toInt8().abs()
        var Number_end = Number_start.add(ee.Number(1)).toInt8().abs();

        var value_sort_951 = value_sort1.toList(Fea_num).slice(Number_start,Number_end,1)
        var value_one1 = ee.Feature(value_sort_951.get(0)).get('value_cal')
        
        result = ee.Feature(value_one1)
    }
    else{
        result = ee.Feature(ee.Number(0));
    }
    
    return result; 
  }


var Size = ee.Number(feacol.size()).toInt8();
print('Size',Size)

var Result = GetValue(Size.getInfo())

print('result',Result)
*/
