/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var CCI_points = ee.FeatureCollection("projects/my-image-assets/assets/China/Cci_points"),
    Jx = ee.FeatureCollection("users/zsy11600/Jiangxi/Boundary/JxLine"),
    L8 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

/*
 function of  get acquiring Landsat SR imageCollection
*/

var startDate = ee.Date.fromYMD(1985,6,10);
var endDate = ee.Date.fromYMD(2021,9,20);
var table = Jx;

function getImageCollection(studyArea,startDate,endDate){

  var sensorBandDictLandsatSR =ee.Dictionary({
                        L8 : ee.List([1,2,3,4,5,7,6]),
                        L7 : ee.List([0,1,2,3,4,5,6]),
                        L5 : ee.List([0,1,2,3,4,5,6])
  });
  var bandNamesLansatSR = ee.List(['blue','green','red','nir','swir1','B10','swir2']);
  
  var l5sr = ee.ImageCollection('LANDSAT/LT05/C01/T1_SR')
              .filterDate(startDate,endDate)
              .filterBounds(studyArea)
              .filterMetadata('CLOUD_COVER','less_than',50)
              .map(cloudMaskL457)
              .select(sensorBandDictLandsatSR.get('L5'), bandNamesLansatSR);
  var l7sr = ee.ImageCollection('LANDSAT/LE07/C01/T1_SR')
              .filterDate(startDate,endDate)
              .filterDate('2012-01-02','2012-12-30')
              .filterBounds(studyArea)
              .filterMetadata('CLOUD_COVER','less_than',50)
              .map(cloudMaskL457)
              .select(sensorBandDictLandsatSR.get('L7'), bandNamesLansatSR)
              .map(function(image){
                  var filled1a = image.focal_mean(2, 'square', 'pixels', 1)
                  return filled1a.blend(image)
                          .set('system:time_start',image.get('system:time_start'));;
                  });
  var l8sr = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
              .filterDate(startDate,endDate)
              .filterBounds(studyArea)
              .filterMetadata('CLOUD_COVER','less_than',50)
              .map(maskCloud)
              .select(sensorBandDictLandsatSR.get('L8'), bandNamesLansatSR);
  var ls = ee.ImageCollection(l5sr.merge(l7sr).merge(l8sr));
  return ls;
}





/*
function of remove cloud
*/
var cloudMaskL457 = function(image) {
  var qa = image.select('pixel_qa');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
                  .and(qa.bitwiseAnd(1 << 7))
                  .or(qa.bitwiseAnd(1 << 3));
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2);
};


//L8 cloud mask
  function maskCloud(image) {
    var cloudBit = 5;
    var cloudshadowBit = 3;
    var cloudBitMask = Math.pow(2, cloudBit); // 0x400
    var cloudshadowBitMask = Math.pow(2, cloudshadowBit); // 0x800
    function mask_landsat_clouds(image) {
    var qa = image.select('pixel_qa');
    var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and( // no clouds
              qa.bitwiseAnd(cloudshadowBitMask).eq(0)); // no cloudshadow
    return image.updateMask(mask);
  }
    return image;
  }
  

var ls = getImageCollection(table,startDate,endDate);


print(ls.limit(100))



















var JxPoints = CCI_points.filterBounds(Jx);
print('JxPoints',JxPoints)

var firstPoint = JxPoints.first()
print('firstPoint',firstPoint)

var dateYear = firstPoint.get('year')
print('dateYear',dateYear)


var startDate = ee.Date.fromYMD(dateYear,1,1);
var endDate = ee.Date.fromYMD(dateYear,1,5);

var images = L8.filterBounds(Jx).select('SR_B3').filterDate(startDate,endDate)
print(images)



var testPoint = firstPoint.geometry();
var OneValue = images.first().reduceRegion({
    reducer:ee.Reducer.mean(),
    geometry:testPoint, 
    crs: 'EPSG:4326',
    scale:30,
    maxPixels:1e13
});

var PointAddPro = firstPoint.set('value_cal',OneValue.get('SR_B3'))



print('PointAddPro',PointAddPro)

print('fisrtValue',OneValue);




function addPro(fea){
  var dateYear = fea.get('year')
  
  var startDate = ee.Date.fromYMD(dateYear,1,1);
  var endDate = ee.Date.fromYMD(dateYear,12,31);
  
  var image = ls.select('red').filterDate(startDate,endDate).mosaic()
  var OneValue = image.reduceRegion({
    reducer:ee.Reducer.mean(),
    geometry:fea.geometry(), 
    crs: 'EPSG:4326',
    scale:30,
    maxPixels:1e13
  });

  var PointAddPro = fea.set('value_cal',OneValue.get('red'))
  
  return PointAddPro;
}

var Point_AddPro = JxPoints.limit(100).map(addPro);

print('Point_AddPro',Point_AddPro);

var valueHisto






