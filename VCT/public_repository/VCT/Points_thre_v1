/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var CCI_points = ee.FeatureCollection("projects/my-image-assets/assets/China/Cci_points"),
    forest_2020 = ee.Image("projects/my-image-assets/assets/China/Forest_2020_china_v2");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

/*
calcalute the ifz threhold in every grid

1.the number of sample point is less 100
2.the number of sample point is over 100
3.the number of sample point is 0
4.the number of sample point is less 100, over 0;

test version  for xiaoye account 
this version is used for the grids without secondary forest sample
*/
var GetThreshold = function GetThreshold(ROI,ImageCol){
var roi = ROI;
var ls = ImageCol;


var forest_img = forest_2020.updateMask(forest_2020.eq(1));
var Points = forest_img.stratifiedSample({
    numPoints:50,
    classBand:'Forest',
    region:roi,
    scale: 30,
    seed: 123,
    geometries:true,
    
})

print('Point',Points);




var JxPoints = Points //CCI_points.filterBounds(roi).limit(50);




function addPro(fea){ 
  var dateYear = ee.Number(2020)      //*********
  
  var startDate = ee.Date.fromYMD(2020,1,1);
  var endDate = ee.Date.fromYMD(2020,12,31);
  
  var image = ls.select('ifz').filterDate(startDate,endDate).mean()
  var OneValue = image.reduceRegion({
    reducer:ee.Reducer.mean(),
    geometry:fea.geometry(), 
    crs: 'EPSG:4326',
    scale:30,
    maxPixels:1e13
  });

  var PointAddPro = fea.set('value_cal',OneValue.get('ifz'))
  
  return PointAddPro;
}

  var image = ls.select('ifz').filterDate('2015-01-1','2015-12-31').mean()
  var OneValue = image.reduceRegion({
    reducer:ee.Reducer.mean(),
    geometry:Points.first().geometry(), 
    crs: 'EPSG:4326',
    scale:30,
    maxPixels:1e13
  });
  
print(OneValue)

print('Point_add',Points.map(addPro))





/*var GetValue = function(feature){
  var feacol = ee.FeatureCollection(feature);
  var Fea_num = ee.Number(feacol.size());*/

var feacol = JxPoints;


var GetValue = function(num){

    var Fea_num = num;
    if (Fea_num >= 100){
      
        var Point_AddPro = feacol.limit(50).map(addPro)
       // var value_histogram = Point_AddPro.aggregate_histogram('value_cal')
        var value_sort = Point_AddPro.sort('value_cal',false).limit(6)
        var value_sort_95 = value_sort.toList(6).slice(5,6,1)
        var value_one = ee.Feature(value_sort_95.get(0)).get('value_cal')
        var result = ee.Feature(value_one);
    }
    else if(0 < Fea_num <100){
        var Point_AddPro1 = feacol.limit(Fea_num).map(addPro);
        var value_sort1 = Point_AddPro1.sort('value_cal',false).limit(Fea_num)
        
        var Number_start = ee.Number(Fea_num).multiply(ee.Number(0.05)).toInt8().abs()
        var Number_end = Number_start.add(ee.Number(1)).toInt8().abs();

        var value_sort_951 = value_sort1.toList(Fea_num).slice(Number_start,Number_end,1)
        var value_one1 = ee.Feature(value_sort_951.get(0)).get('value_cal')
        
        result = ee.Feature(value_one1)
    }
    else{
        result = ee.Feature(ee.Number(0));
    }
    
    return result; 
  }



var Size = ee.Number(feacol.size()).toInt8();
//print('Size',Size)

var Result = GetValue(Size.getInfo())

//print('result',Result)

return Result;

}

exports.GetThreshold = GetThreshold;